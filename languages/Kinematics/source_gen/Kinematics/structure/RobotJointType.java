package Kinematics.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum RobotJointType {
  revolute("revolute", "revolute"),
  continuous("continuous", "continuous"),
  prismatic("prismatic", "prismatic"),
  fixed("fixed", "fixed"),
  floating("floating", "floating"),
  planar("planar", "planar");

  private final String myName;
  public String getName() {
    return myName;
  }
  private final String myValue;
  private RobotJointType(String name, String value) {
    myName = name;
    myValue = value;
  }
  public String getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return myValue;
  }
  public static List<RobotJointType> getConstants() {
    List<RobotJointType> list = ListSequence.fromList(new LinkedList<RobotJointType>());
    ListSequence.fromList(list).addElement(RobotJointType.revolute);
    ListSequence.fromList(list).addElement(RobotJointType.continuous);
    ListSequence.fromList(list).addElement(RobotJointType.prismatic);
    ListSequence.fromList(list).addElement(RobotJointType.fixed);
    ListSequence.fromList(list).addElement(RobotJointType.floating);
    ListSequence.fromList(list).addElement(RobotJointType.planar);
    return list;
  }
  public static RobotJointType getDefault() {
    return RobotJointType.revolute;
  }
  public static RobotJointType parseValue(String value) {
    if (value == null) {
      return RobotJointType.getDefault();
    }
    if (value.equals(RobotJointType.revolute.getValueAsString())) {
      return RobotJointType.revolute;
    }
    if (value.equals(RobotJointType.continuous.getValueAsString())) {
      return RobotJointType.continuous;
    }
    if (value.equals(RobotJointType.prismatic.getValueAsString())) {
      return RobotJointType.prismatic;
    }
    if (value.equals(RobotJointType.fixed.getValueAsString())) {
      return RobotJointType.fixed;
    }
    if (value.equals(RobotJointType.floating.getValueAsString())) {
      return RobotJointType.floating;
    }
    if (value.equals(RobotJointType.planar.getValueAsString())) {
      return RobotJointType.planar;
    }
    return RobotJointType.getDefault();
  }
}
